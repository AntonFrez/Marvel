{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","module","exports","require","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","oneCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","prototype","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANM,WACjB,OACIC,cAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAYC,IAAKC,EAAKC,IAAI,Y,yEC6DjHC,IA/DU,WAErB,IAAAC,ECFmB,WACnB,IAAAC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA6BtB,MAAO,CAACH,UAASM,QA3BDC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKd,OAJpBV,EAAMK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,MACTJ,EAAII,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,KACPH,EAAOG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAgB,oBAEvBlB,GAAW,GAAKqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGWG,MAAMd,EAAK,CAACC,SAAQC,OAAMC,YAAS,OAA5C,IAARC,EAAQK,EAAAM,MAEAC,GAAG,CAADP,EAAAE,KAAA,eACN,IAAIM,MAAM,mBAADC,OAAoBlB,EAAG,cAAAkB,OAAad,EAASe,SAAS,eAAAV,EAAAE,KAAA,GAGtDP,EAASgB,OAAM,QACjB,OADXf,EAAII,EAAAM,KACV3B,GAAW,GAAMqB,EAAAY,OAAA,SACVhB,GAAI,QAIQ,MAJRI,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAGXrB,GAAW,GACXI,EAASiB,EAAAa,GAAEC,SAAQd,EAAAa,GAAA,yBAAAb,EAAAe,UAAAzB,EAAA,mBAG9B,gBAAA0B,GAAA,OAAA9B,EAAA+B,MAAA,KAAAnB,YAvB0B,GAuBxB,IAIuBhB,QAAOoC,WAFdjC,uBAAY,kBAAMF,EAAS,QAAO,KD3BPoC,GAAvCzC,EAAOL,EAAPK,QAASM,EAAOX,EAAPW,QAASF,EAAKT,EAALS,MAAOoC,EAAU7C,EAAV6C,WAE1BE,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,eAAApC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAiC,EAAAC,EAAA3B,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA0B,OAApBqB,EAAM1B,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAFjB,IAE+BG,EAAAE,KAAA,EAC7BlB,EAAQ,GAADyB,OAAIW,EAAQ,8BAAAX,OAA6Bc,EAAM,KAAAd,OAAIY,IAAU,OAA7E,OAAHG,EAAGxB,EAAAM,KAAAN,EAAAY,OAAA,SACFY,EAAI5B,KAAK6B,QAAQC,IAAIC,IAAoB,wBAAA3B,EAAAe,UAAAzB,OACnD,kBAHqB,OAAAJ,EAAA+B,MAAA,KAAAnB,YAAA,GAKhB8B,EAAY,eAAAC,EAAA1C,YAAAC,IAAAC,MAAG,SAAAyC,EAAOC,GAAE,IAAAP,EAAA,OAAApC,IAAAW,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACRlB,EAAQ,GAADyB,OAAIW,EAAQ,eAAAX,OAAcsB,EAAE,MAAAtB,OAAKY,IAAU,OAA3D,OAAHG,EAAGQ,EAAA1B,KAAA0B,EAAApB,OAAA,SACFe,EAAoBH,EAAI5B,KAAK6B,QAAQ,KAAG,wBAAAO,EAAAjB,UAAAe,OAClD,gBAHiBd,GAAA,OAAAa,EAAAZ,MAAA,KAAAnB,YAAA,GAKZmC,EAAY,eAAAC,EAAA/C,YAAAC,IAAAC,MAAG,SAAA8C,IAAA,IAAAZ,EAAAC,EAAAY,EAAAtC,UAAA,OAAAV,IAAAW,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAAiB,OAAVqB,EAAMa,EAAAjC,OAAA,QAAAC,IAAAgC,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAnC,KAAA,EAChBlB,EAAQ,GAADyB,OAC3BW,EAAQ,8CAAAX,OAA6Cc,EAAM,KAAAd,OAAIY,IACjE,KAAD,EAFc,OAAHG,EAAGa,EAAA/B,KAAA+B,EAAAzB,OAAA,SAGRY,EAAI5B,KAAK6B,QAAQC,IAAIY,IAAiB,wBAAAD,EAAAtB,UAAAoB,OAC7C,kBALoB,OAAAD,EAAAjB,MAAA,KAAAnB,YAAA,GAOfyC,EAAQ,eAAAC,EAAArD,YAAAC,IAAAC,MAAG,SAAAoD,EAAOV,GAAE,IAAAP,EAAA,OAAApC,IAAAW,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EACPlB,EAAQ,GAADyB,OAAIW,EAAQ,WAAAX,OAAUsB,EAAE,KAAAtB,OAAIY,IAAW,KAAD,EAAtD,OAAHG,EAAGkB,EAAApC,KAAAoC,EAAA9B,OAAA,SACF0B,EAAiBd,EAAI5B,KAAK6B,QAAQ,KAAG,wBAAAiB,EAAA3B,UAAA0B,OAC5C,gBAHaE,GAAA,OAAAH,EAAAvB,MAAA,KAAAnB,YAAA,GAKL6B,EAAsB,SAACiB,GAEzB,MAAO,CACHb,GAAIa,EAAKb,GACTc,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAW,GAAArC,OAAMmC,EAAKE,YAAYC,MAAM,EAAE,KAAI,OAAQ,6CACxEC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAG7D,IACvB8D,KAAOT,EAAKQ,KAAK,GAAG7D,IACpB+D,OAAQV,EAAKU,OAAOC,QAItBjB,EAAmB,SAACgB,GAAY,IAADE,EACvC,MAAO,CACNzB,GAAIuB,EAAOvB,GACX0B,MAAOH,EAAOG,MACdX,YAAaQ,EAAOR,aAAe,0BACnCY,UAAWJ,EAAOI,UAAS,GAAAjD,OACrB6C,EAAOI,UAAS,OACnB,2CACHV,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DS,UAA+B,QAArBH,EAAAF,EAAOM,YAAY,UAAE,IAAAJ,OAAA,EAArBA,EAAuBG,WAAY,QAE7CE,MAAOP,EAAOQ,OAAO,GAAGD,MAAK,GAAApD,OACvB6C,EAAOQ,OAAO,GAAGD,MAAK,KACzB,kBAIF,MAAO,CAACnF,UAASI,QAAOwC,mBAAkBM,eAAcV,aAAYe,eAAcM,c,uGE7CpFwB,EAAOC,QAAUC,EAAQ,GAARA,I,gCCRnB,IAAIC,EAAuBD,EAAQ,IAEnC,SAASE,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CJ,EAAOC,QAAU,WACf,SAASM,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWV,EAAf,CAIA,IAAIW,EAAM,IAAIrE,MACZ,mLAKF,MADAqE,EAAIhC,KAAO,sBACLgC,GAGR,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTa,QAASrB,EACTsB,YAAatB,EACbuB,WAAYf,EACZgB,KAAMxB,EACNyB,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBhC,EAChBC,kBAAmBF,GAKrB,OAFAa,EAAeqB,UAAYrB,EAEpBA,I,gCCpDTjB,EAAOC,QAFoB,gD,iFCTZ,G,MAAA,IAA0B,qC,OC4DnCsC,EAAO,SAAHpH,GAAgB,IAAX0D,EAAI1D,EAAJ0D,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaE,EAA6BJ,EAA7BI,UAAWG,EAAkBP,EAAlBO,SAAUE,EAAQT,EAARS,KAG3CkD,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdvD,IACAuD,EAAW,CAAC,UAAc,YAI1BC,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BhJ,cAAA,OAAKO,IAAK+E,EAAW7E,IAAI,mBAAmBsI,UAAU,kBAAkB9I,MAAO4I,IAC/EC,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BhJ,cAAA,KAAG+I,UAAU,mBAAkBC,SAAE7D,IACjCnF,cAAA,KAAG+I,UAAU,oBAAmBC,SAChC5D,IAEJ0D,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BhJ,cAAA,KAAGiJ,KAAMxD,EAAUsD,UAAU,sBAAqBC,SAC9ChJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,eAE3BhJ,cAAA,KAAGiJ,KAAMtD,EAAMoD,UAAU,2BAA0BC,SAC/ChJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,qBAQ5BE,EAlFI,WAEf,IAAAtI,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BsE,EAAIpE,EAAA,GAAEqI,EAAOrI,EAAA,GACpBsI,EAAmD1I,cAA5CM,EAAOoI,EAAPpI,QAASI,EAAKgI,EAALhI,MAAO8C,EAAYkF,EAAZlF,aAAcV,EAAU4F,EAAV5F,WAErC6F,qBAAU,WACNC,IACA,IAAMC,EAAUC,YAAYF,EAAY,KAExC,OAAO,WACHG,cAAcF,MAEnB,IAGH,IAAMG,EAAgB,SAACxE,GACnBiE,EAAQjE,IAGNoE,EAAa,WACf9F,IACA,IAAMa,EAAKsF,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5D3F,EAAaG,GACZyF,KAAKJ,IAGJK,EAAe3I,EAAQpB,cAACD,IAAY,IAAK,KACzCiK,EAAUhJ,EAAUhB,cAACiK,IAAO,IAAK,KACjCC,EAAYlJ,GAAWI,EAA+B,KAAtBpB,cAAC4I,EAAI,CAAC1D,KAAMA,IAElD,OACI4D,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBe,EACAC,EACAE,EACDpB,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BF,eAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,8BACFhJ,cAAA,SAAK,4CAGpCA,cAAA,KAAG+I,UAAU,oBAAmBC,SAAC,0BAGjChJ,cAAA,UAAQmK,QAASb,EAAYP,UAAU,sBAAqBC,SACxDhJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,aAE3BhJ,cAAA,OAAKO,IAAK6J,EAAS3J,IAAI,UAAUsI,UAAU,kC,OC0D5CsB,G,MAxGE,SAACxD,GAEd,IAAAjG,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC0J,EAAQxJ,EAAA,GAAEyJ,EAAWzJ,EAAA,GAC5BI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDsJ,EAAcrJ,EAAA,GAAEsJ,EAAiBtJ,EAAA,GACxCuJ,EAA4B7J,mBAAS,KAAI8J,EAAA5J,YAAA2J,EAAA,GAAlC7G,EAAM8G,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAAkChK,oBAAS,GAAMiK,EAAA/J,YAAA8J,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9B1B,EAA2C1I,cAApCM,EAAOoI,EAAPpI,QAASI,EAAKgI,EAALhI,MAAOwC,EAAgBwF,EAAhBxF,iBAEvByF,qBAAU,WACN4B,EAAUpH,GAAQ,KACnB,IAEH,IAAMoH,EAAY,SAACpH,EAAQqH,GACbT,GAAVS,GACAtH,EAAiBC,GACZiG,KAAKqB,IAGRA,EAAmB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAY3I,OAAS,IACrB4I,GAAQ,GAIZd,GAAY,SAAAD,GAAQ,SAAAvH,OAAAuI,YAAQhB,GAAQgB,YAAKF,OACzCX,GAAkB,SAAAD,GAAc,OAAI,KACpCI,GAAU,SAAA/G,GAAM,OAAIA,EAAS,KAC7BmH,GAAa,SAAAD,GAAS,OAAIM,MAKxBE,EAAWC,iBAAO,IAElBC,EAAc,SAACpH,GACjBkH,EAASG,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACvDP,EAASG,QAAQrH,GAAIwH,UAAUE,IAAI,uBACnCR,EAASG,QAAQrH,GAAI2H,SAuCrB,IAAMnG,EApCV,SAAqBoG,GACjB,IAAMpG,EAASoG,EAAIjI,KAAI,SAAC4H,EAAMM,GAC1B,IAAIrD,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnB+C,EAAKtG,YACLuD,EAAW,CAAC,UAAc,UAI1BC,eAAA,MACIC,UAAU,aACVoD,SAAU,EACVC,IAAK,SAAAC,GAAE,OAAId,EAASG,QAAQQ,GAAKG,GAEjClC,QAAS,WACLtD,EAAMyF,eAAeV,EAAKvH,IAC1BoH,EAAYS,IAEhBK,WAAY,SAACC,GACK,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACnB5F,EAAMyF,eAAeV,EAAKvH,IAC1BoH,EAAYS,KAElBlD,SAAA,CACEhJ,cAAA,OAAKO,IAAKqL,EAAKtG,UAAW7E,IAAKmL,EAAKzG,KAAMlF,MAAO4I,IACjD7I,cAAA,OAAK+I,UAAU,aAAYC,SAAE4C,EAAKzG,SAZjCyG,EAAKvH,OAiBtB,OACIrE,cAAA,MAAI+I,UAAU,aAAYC,SACrBnD,IAKK6G,CAAYpC,GAEpBP,EAAe3I,EAAQpB,cAACD,IAAY,IAAK,KACzCiK,EAAUhJ,IAAYwJ,EAAiBxK,cAACiK,IAAO,IAAK,KAE1D,OACInB,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBe,EACAC,EACAnE,EACD7F,cAAA,UACI+I,UAAU,mCACV4D,SAAUnC,EACVvK,MAAO,CAAC,QAAW8K,EAAY,OAAS,SACxCZ,QAAS,kBAAMc,EAAUpH,IAAQmF,SACjChJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,qB,iBClF5B4D,G,MAjBE,WACb,OACI9D,eAAA+D,WAAA,CAAA7D,SAAA,CACIhJ,cAAA,KAAG+I,UAAU,eAAcC,SAAC,iDAC5BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnChJ,cAAA,OAAK+I,UAAU,2BACf/I,cAAA,OAAK+I,UAAU,4BAEnB/I,cAAA,OAAK+I,UAAU,0BACf/I,cAAA,OAAK+I,UAAU,0BACf/I,cAAA,OAAK+I,UAAU,kCCLzB+D,G,MAAW,SAACjG,GAEd,IAAAjG,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BsE,EAAIpE,EAAA,GAAEqI,EAAOrI,EAAA,GAEpBsI,EAAmD1I,cAA5CM,EAAOoI,EAAPpI,QAASI,EAAKgI,EAALhI,MAAO8C,EAAYkF,EAAZlF,aAAcV,EAAU4F,EAAV5F,WAErC6F,qBAAU,WACNC,MACD,CAACzC,EAAMkG,SAEV,IAAMzD,EAAa,WACf,IAAOyD,EAAUlG,EAAVkG,OACFA,IAILvJ,IACAU,EAAa6I,GACZjD,KAAKJ,KAGJA,EAAgB,SAACxE,GACnBiE,EAAQjE,IAGN8H,EAAW9H,GAAQlE,GAAWI,EAAQ,KAAOpB,cAAC4M,EAAQ,IACtD7C,EAAe3I,EAAQpB,cAACD,IAAY,IAAK,KACzCiK,EAAUhJ,EAAUhB,cAACiK,IAAO,IAAK,KACjCC,EAAYlJ,GAAWI,IAAU8D,EAA8B,KAAtBlF,cAAC4I,EAAI,CAAC1D,KAAMA,IAE3D,OACI4D,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBgE,EACAjD,EACAC,EACAE,OAMPtB,EAAO,SAAHpH,GAAgB,IAAX0D,EAAI1D,EAAJ0D,KACJC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OAEjDiD,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdvD,IACAuD,EAAW,CAAC,UAAc,YAI1BC,eAAA+D,WAAA,CAAA7D,SAAA,CACIF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBhJ,cAAA,OAAKO,IAAK+E,EAAW7E,IAAK0E,EAAMlF,MAAO4I,IACnCC,eAAA,OAAAE,SAAA,CACIhJ,cAAA,OAAK+I,UAAU,kBAAiBC,SAAE7D,IAClC2D,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBhJ,cAAA,KAAGiJ,KAAMxD,EAAUsD,UAAU,sBAAqBC,SAC9ChJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,eAE3BhJ,cAAA,KAAGiJ,KAAMtD,EAAMoD,UAAU,2BAA0BC,SAC/ChJ,cAAA,OAAK+I,UAAU,QAAOC,SAAC,oBAKvChJ,cAAA,OAAK+I,UAAU,cAAaC,SACvB5D,IAGLpF,cAAA,OAAK+I,UAAU,eAAcC,SAAC,YAC9BF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAC5BpD,EAAOnD,OAAS,EAAI,KAAO,yCAExBmD,EAAO5B,KAAI,SAAC4H,EAAMM,GAEd,KAAIA,EAAI,GACR,OACIlM,cAAA,MAAY+I,UAAU,oBAAmBC,SACpC4C,EAAKzG,MADD+G,aAWzCY,EAASG,UAAY,CACjBF,OAAQpE,IAAUd,QAGPiF,Q,gCC5EAI,EArBI,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAArL,UAAAK,OAAAiL,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAxL,UAAAwL,GAGd,OAHcL,EAAAF,EAAAQ,KAAAtK,MAAA8J,EAAA,OAAAtK,OAAA2K,KACfI,MAAQ,CACJ1M,OAAO,GACVmM,EAeA,OAfAQ,YAAAb,EAAA,EAAAT,IAAA,oBAAAuB,MAED,SAAkB5M,EAAO6M,GACrBC,QAAQC,IAAI/M,EAAO6M,GACnBG,KAAKC,SAAS,CACVjN,OAAO,MAEd,CAAAqL,IAAA,SAAAuB,MAED,WACI,OAAII,KAAKN,MAAM1M,MACJpB,cAACD,IAAY,IAGjBqO,KAAKvH,MAAMmC,aACrBkE,EAlBc,CAASoB,aCHb,MAA0B,mCCqC1BC,UA5BE,WAEb,IAAA3N,EAAgCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAvC4N,EAAY1N,EAAA,GAAEqI,EAAOrI,EAAA,GAM5B,OACIgI,eAAA+D,WAAA,CAAA7D,SAAA,CACIhJ,cAACkN,EAAa,CAAAlE,SACVhJ,cAACkJ,EAAU,MAGfJ,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BhJ,cAACkN,EAAa,CAAAlE,SACVhJ,cAACqK,EAAQ,CAACiC,eAZH,SAACjI,GACpB8E,EAAQ9E,QAcArE,cAACkN,EAAa,CAAAlE,SACVhJ,cAAC8M,EAAQ,CAACC,OAAQyB,SAG1BxO,cAAA,OAAK+I,UAAU,gBAAgBxI,IAAKkO,EAAYhO,IAAI","file":"static/js/3.0e807036.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=b683494e1d6b469406ebff7c4af69cfb'\r\n    const _baseOffset = 210\r\n\r\n    const getAllCharacters = async(offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`)\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki:  char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic,}\r\n}\r\n\r\nexport default useMarvelService","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, \r\n        method = 'GET', \r\n        body = null, \r\n        headers = {'Content-Type': 'application/json'}) => {\r\n\r\n            setLoading(true)\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers})\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n                }\r\n\r\n                const data = await response.json()\r\n                setLoading(false)\r\n                return data\r\n\r\n            } catch(e) {\r\n                setLoading(false)\r\n                setError(e.message)\r\n                throw e\r\n            }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({})\n    const {loading, error, getCharacter, clearError} = useMarvelService()\n\n    useEffect(() => {\n        updateChar()\n        const timerId = setInterval(updateChar, 60000)\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n    \n\n    const oneCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const updateChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        getCharacter(id)\n        .then(oneCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null\n    const spinner = loading ? <Spinner/> : null\n    const content = !(loading || error) ? <View char={char}/> : null\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char\n   \n\n    let imgStyle = {'objectFit' : 'cover'}\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'}\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n               {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([])\n    const [newItemLoading, setNewItemLoading] = useState(false)\n    const [offset, setOffset] = useState(210)\n    const [charEnded, setCharEnded] = useState(false)\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n            \n        }\n\n        setCharList(charList => [...charList, ...newCharList])\n        setNewItemLoading(newItemLoading => false)\n        setOffset(offset => offset + 9)\n        setCharEnded(charEnded => ended)\n    }\n\n   \n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n        \n        const items = renderItems(charList);\n        \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null)\n \n    const {loading, error, getCharacter, clearError} = useMarvelService()\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props\n        if (!charId) {\n            return\n        }\n\n        clearError()\n        getCharacter(charId)\n        .then(oneCharLoaded)\n    }\n\n    const oneCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null\n    const spinner = loading ? <Spinner/> : null\n    const content = !(loading || error || !char) ? <View char={char}/> : null\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n\n    let imgStyle = {'objectFit' : 'cover'}\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'}\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'There is no comics whit this character'}\n                    {\n                        comics.map((item, i) => {\n                            // eslint-disable-next-line\n                            if (i > 9) return\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n        </>\n    )\n}\n\nCharInfo.prototype = {\n    charId: PropTypes.string\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null)\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage"],"sourceRoot":""}