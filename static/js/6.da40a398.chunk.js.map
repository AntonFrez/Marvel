{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_ref6","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","_defineProperty","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setNewItemLoading","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANM,WACjB,OACIC,cAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAYC,IAAKC,EAAKC,IAAI,Y,gFC4EjHC,IA9EU,WAAO,IAADC,EAE3BC,ECFmB,WACnB,IAAAC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA8BT,mBAAS,WAAUU,EAAAR,YAAAO,EAAA,GAA1CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkC1B,MAAO,CAACP,UAASU,QAhCDC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMT,OALzBV,EAAMK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,MACTJ,EAAII,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,KACPH,EAAOG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAgB,oBAEvBtB,GAAW,GACXQ,EAAW,WAAUiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMG,MAAMd,EAAK,CAACC,SAAQC,OAAMC,YAAS,OAA5C,IAARC,EAAQK,EAAAM,MAEAC,GAAG,CAADP,EAAAE,KAAA,eACN,IAAIM,MAAM,mBAADC,OAAoBlB,EAAG,cAAAkB,OAAad,EAASe,SAAS,eAAAV,EAAAE,KAAA,GAGtDP,EAASgB,OAAM,QACjB,OADXf,EAAII,EAAAM,KACV/B,GAAW,GAAMyB,EAAAY,OAAA,SACVhB,GAAI,QAKQ,MALRI,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAGXzB,GAAW,GACXI,EAASqB,EAAAa,GAAEC,SACX/B,EAAW,SAAQiB,EAAAa,GAAA,yBAAAb,EAAAe,UAAAzB,EAAA,mBAG9B,gBAAA0B,GAAA,OAAA9B,EAAA+B,MAAA,KAAAnB,YAzB0B,GAyBxB,IAOuBpB,QAAOwC,WALdjC,uBAAY,WAC3BN,EAAS,MACTI,EAAW,aACZ,IAE0CD,UAASC,cDnCaoC,GAA5D7C,EAAOL,EAAPK,QAASU,EAAOf,EAAPe,QAASN,EAAKT,EAALS,MAAOwC,EAAUjD,EAAViD,WAAYpC,EAAOb,EAAPa,QAASC,EAAUd,EAAVc,WAE/CqC,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,eAAApC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAiC,EAAAC,EAAA3B,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA0B,OAApBqB,EAAM1B,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAFjB,IAE+BG,EAAAE,KAAA,EAC7BlB,EAAQ,GAADyB,OAAIW,EAAQ,8BAAAX,OAA6Bc,EAAM,KAAAd,OAAIY,IAAU,OAA7E,OAAHG,EAAGxB,EAAAM,KAAAN,EAAAY,OAAA,SACFY,EAAI5B,KAAK6B,QAAQC,IAAIC,IAAoB,wBAAA3B,EAAAe,UAAAzB,OACnD,kBAHqB,OAAAJ,EAAA+B,MAAA,KAAAnB,YAAA,GAKhB8B,EAAkB,eAAAC,EAAA1C,YAAAC,IAAAC,MAAG,SAAAyC,EAAOC,GAAI,IAAAP,EAAA,OAAApC,IAAAW,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACtBlB,EAAQ,GAADyB,OAAIW,EAAQ,oBAAAX,OAAmBsB,EAAI,KAAAtB,OAAIY,IAAW,KAAD,EAAjE,OAAHG,EAAGQ,EAAA1B,KAAA0B,EAAApB,OAAA,SACFY,EAAI5B,KAAK6B,QAAQC,IAAIC,IAAoB,wBAAAK,EAAAjB,UAAAe,OAChD,gBAH0Bd,GAAA,OAAAa,EAAAZ,MAAA,KAAAnB,YAAA,GAKlBmC,EAAY,eAAAC,EAAA/C,YAAAC,IAAAC,MAAG,SAAA8C,EAAOC,GAAE,IAAAZ,EAAA,OAAApC,IAAAW,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACRlB,EAAQ,GAADyB,OAAIW,EAAQ,eAAAX,OAAc2B,EAAE,MAAA3B,OAAKY,IAAU,OAA3D,OAAHG,EAAGa,EAAA/B,KAAA+B,EAAAzB,OAAA,SACFe,EAAoBH,EAAI5B,KAAK6B,QAAQ,KAAG,wBAAAY,EAAAtB,UAAAoB,OAClD,gBAHiBG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAnB,YAAA,GAKZyC,EAAY,eAAAC,EAAArD,YAAAC,IAAAC,MAAG,SAAAoD,IAAA,IAAAlB,EAAAC,EAAAkB,EAAA5C,UAAA,OAAAV,IAAAW,MAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OAAiB,OAAVqB,EAAMmB,EAAAvC,OAAA,QAAAC,IAAAsC,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAzC,KAAA,EAChBlB,EAAQ,GAADyB,OAC3BW,EAAQ,8CAAAX,OAA6Cc,EAAM,KAAAd,OAAIY,IACjE,KAAD,EAFc,OAAHG,EAAGmB,EAAArC,KAAAqC,EAAA/B,OAAA,SAGRY,EAAI5B,KAAK6B,QAAQC,IAAIkB,IAAiB,wBAAAD,EAAA5B,UAAA0B,OAC7C,kBALoB,OAAAD,EAAAvB,MAAA,KAAAnB,YAAA,GAOf+C,EAAQ,eAAAC,EAAA3D,YAAAC,IAAAC,MAAG,SAAA0D,EAAOX,GAAE,IAAAZ,EAAA,OAAApC,IAAAW,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACPlB,EAAQ,GAADyB,OAAIW,EAAQ,WAAAX,OAAU2B,EAAE,KAAA3B,OAAIY,IAAW,KAAD,EAAtD,OAAHG,EAAGwB,EAAA1C,KAAA0C,EAAApC,OAAA,SACFgC,EAAiBpB,EAAI5B,KAAK6B,QAAQ,KAAG,wBAAAuB,EAAAjC,UAAAgC,OAC5C,gBAHaE,GAAA,OAAAH,EAAA7B,MAAA,KAAAnB,YAAA,GAKL6B,EAAsB,SAACuB,GAEzB,MAAO,CACHd,GAAIc,EAAKd,GACTL,KAAMmB,EAAKnB,KACXoB,YAAaD,EAAKC,YAAW,GAAA1C,OAAMyC,EAAKC,YAAYC,MAAM,EAAE,KAAI,OAAQ,6CACxEC,UAAWH,EAAKG,UAAUC,KAAO,IAAMJ,EAAKG,UAAUE,UACtDC,SAAUN,EAAKO,KAAK,GAAGlE,IACvBmE,KAAOR,EAAKO,KAAK,GAAGlE,IACpBoE,OAAQT,EAAKS,OAAOC,QAItBhB,EAAmB,SAACe,GAAY,IAADE,EACvC,MAAO,CACNzB,GAAIuB,EAAOvB,GACX0B,MAAOH,EAAOG,MACdX,YAAaQ,EAAOR,aAAe,0BACnCY,UAAWJ,EAAOI,UAAS,GAAAtD,OACrBkD,EAAOI,UAAS,OACnB,2CACHV,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DS,UAA+B,QAArBH,EAAAF,EAAOM,YAAY,UAAE,IAAAJ,OAAA,EAArBA,EAAuBG,WAAY,QAE7CE,MAAOP,EAAOQ,OAAO,GAAGD,MAAK,GAAAzD,OACvBkD,EAAOQ,OAAO,GAAGD,MAAK,KACzB,kBAIF,OAAAlG,EAAA,CAAQM,UACAI,QACAwC,aACApC,UACAC,aACAuC,mBACAM,qBACAK,gBAAYmC,YAAApG,EAAC,aACbkD,GAAUkD,YAAApG,EAAC,eACXuE,GAAY6B,YAAApG,EAAC,WACb6E,GAAQ7E,I,+DE7EL,MAA0B,qCCA1B,MAA0B,0C,OCiB1BqG,IAbG,WACd,OACIC,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBnH,cAAA,OAAKO,IAAK6G,EAAU3G,IAAI,aACxBwG,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,yBACRnH,cAAA,SAAK,iBAG/BA,cAAA,OAAKO,IAAK8G,EAAc5G,IAAI,uB,oICJlC6G,EAAa,SAAC7F,EAAS8F,EAAWC,GACpC,OAAO/F,GACH,IAAK,UACD,OAAOzB,cAACyH,IAAO,IAEnB,IAAK,UACD,OAAOD,EAAiBxH,cAACuH,EAAS,IAAKvH,cAACyH,IAAO,IAEnD,IAAK,YACD,OAAOzH,cAACuH,EAAS,IAErB,IAAK,QACD,OAAOvH,cAACD,IAAY,IAExB,QACI,MAAM,IAAIoD,MAAM,8BAsEbuE,EAlEI,WAEf,IAAA7G,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC8G,EAAU5G,EAAA,GAAE6G,EAAa7G,EAAA,GAChCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDqG,EAAcpG,EAAA,GAAEyG,EAAiBzG,EAAA,GACxCG,EAA4BT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAhC2C,EAAM1C,EAAA,GAAEsG,EAAStG,EAAA,GACxBuG,EAAsCjH,oBAAS,GAAMkH,EAAAhH,YAAA+G,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA4DzH,cAArCwE,GAATiD,EAAPlH,QAAckH,EAAL9G,MAAmB8G,EAAZjD,cAAczD,EAAO0G,EAAP1G,QAASC,EAAUyG,EAAVzG,WAE9C0G,qBAAU,WACNC,EAAUnE,GAAQ,KACnB,IAEH,IAAMmE,EAAY,SAACnE,EAAQoE,GACbT,GAAVS,GACApD,EAAahB,GACRqE,KAAKC,GACLD,MAAK,kBAAM7G,EAAW,iBAGzB8G,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAc3F,OAAS,IACvB4F,GAAQ,GAGZd,GAAc,SAAAD,GAAU,SAAAvE,OAAAuF,YAAQhB,GAAUgB,YAAKF,OAC/CZ,GAAkB,GAClBC,EAAU5D,EAAS,GACnBgE,EAAeQ,IAuBnB,OACIzB,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BG,EAAW7F,GAAS,kBAtB1B,SAAqBmH,GACjB,IAAMrC,EAASqC,EAAIvE,KAAI,SAACwE,EAAMC,GAC1B,OACI9I,cAAA,MAAIkH,UAAU,eAAcC,SACxBF,eAAC8B,IAAI,CAACC,GAAE,kBAAA5F,OAAoByF,EAAK9D,IAAKoC,SAAA,CAClCnH,cAAA,OAAKO,IAAKsI,EAAK7C,UAAWvF,IAAKoI,EAAKpC,MAAOS,UAAU,qBACrDlH,cAAA,OAAKkH,UAAU,oBAAmBC,SAAE0B,EAAKpC,QACzCzG,cAAA,OAAKkH,UAAU,qBAAoBC,SAAE0B,EAAKhC,YAJhBiC,MAU9C,OACI9I,cAAA,MAAIkH,UAAU,eAAcC,SACvBZ,IAOwB0C,CAAYtB,KAAaH,GACtDxH,cAAA,UACIkJ,SAAU1B,EACVvH,MAAO,CAAC,QAAYgI,EAAc,QAAU,QAC5Cf,UAAU,mCACViC,QAAS,kBAAMd,EAAUnE,IAAQiD,SACjCnH,cAAA,OAAKkH,UAAU,QAAOC,SAAC,oB,gBCnEpBiC,UAhBI,WAEf,OACInC,eAAAoC,WAAA,CAAAlC,SAAA,CACAF,eAACqC,IAAM,CAAAnC,SAAA,CACHnH,cAAA,QACI0E,KAAK,cACL6E,QAAQ,iCACZvJ,cAAA,SAAAmH,SAAO,mBAEPnH,cAACgH,IAAS,IACVhH,cAAC0H,EAAU","file":"static/js/6.da40a398.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError, process, setProcess} = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=b683494e1d6b469406ebff7c4af69cfb'\r\n    const _baseOffset = 210\r\n\r\n    const getAllCharacters = async(offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`)\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki:  char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading,\r\n            error,\r\n            clearError,\r\n            process,\r\n            setProcess,\r\n            getAllCharacters,\r\n            getCharacterByName,\r\n            getCharacter,\r\n            clearError,\r\n            getAllComics,\r\n            getComic,}\r\n}\r\n\r\nexport default useMarvelService","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [process, setProcess] = useState('waiting')\r\n\r\n    const request = useCallback(async (url, \r\n        method = 'GET', \r\n        body = null, \r\n        headers = {'Content-Type': 'application/json'}) => {\r\n\r\n            setLoading(true)\r\n            setProcess('loading')\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers})\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n                }\r\n\r\n                const data = await response.json()\r\n                setLoading(false)\r\n                return data\r\n\r\n            } catch(e) {\r\n                setLoading(false)\r\n                setError(e.message)\r\n                setProcess('error')\r\n                throw e\r\n            }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null)\r\n        setProcess('loading')\r\n    }, [])\r\n\r\n    return {loading, request, error, clearError, process, setProcess}\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch(process) {\n        case 'waiting':\n            return <Spinner/>\n            break\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n            break\n        case 'confirmed':\n            return <Component/>\n            break\n        case 'error':\n            return <ErrorMessage/>\n            break\n        default:\n            throw new Error('Unexpected process state')\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([])\n    const [newItemLoading, setNewItemLoading] = useState(false)\n    const [offset, setOffset] = useState(0)\n    const [comicsEnded, setComicsEnded] = useState(false)\n\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService()\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 9) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList])\n        setNewItemLoading(false)\n        setOffset(offset + 9)\n        setComicsEnded(ended)\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/Marvel/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n    return (\n        <ul className=\"comics__grid\">\n            {items}\n        </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n         {setContent(process, () =>  renderItems(comicsList), newItemLoading)}\n        <button \n            disabled={newItemLoading} \n            style={{'display' : comicsEnded ? 'block' : 'none'}}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}>\n            <div className=\"inner\">load more</div>\n        </button>\n    </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"/>\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage"],"sourceRoot":""}